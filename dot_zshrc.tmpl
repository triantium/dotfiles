# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/go/bin:$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="{{ .chezmoi.homeDir }}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="cypher"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )


# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"



# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(bgnotify)

{{ if lookPath "git" }}
plugins+=(git)
{{end}}
{{ if lookPath "mvn" }}
plugins+=(mvn)
{{end}}
{{ if lookPath "ansible" }}
plugins+=(ansible)
{{end}}
{{ if lookPath "docker" }}
plugins+=(docker)
{{end}}
{{ if lookPath "docker-compose" }}
plugins+=(docker-compose)
{{end}}
{{ if lookPath "lein" }}
plugins+=(lein)
{{end}}
{{ if lookPath "http" }}
plugins+=(httpie)
{{end}}
{{ if lookPath "man" }}
plugins+=(man)
{{end}}
{{ if lookPath "nmap" }}
plugins+=(nmap)
{{end}}
{{ if lookPath "npm" }}
plugins+=(npm)
{{end}}
{{ if lookPath "yarn" }}
plugins+=(yarn)
{{end}}
{{ if lookPath "pass" }}
plugins+=(pass)
{{end}}
{{ if lookPath "sdk" }}
plugins+=(sdk)
{{end}}
{{ if lookPath "task" }}
plugins+=(taskwarrior)
{{end}}
{{ if lookPath "sudo" }}
plugins+=(sudo)
{{end}}
{{ if lookPath "go" }}
plugins+=(golang)
{{end}}
if [ -d "{{joinPath .chezmoi.homeDir ".adfs"}}" ] ; then
plugins+=(adfs)
fi


source $ZSH/oh-my-zsh.sh

# Setup Aliase
if [ -f "{{joinPath .chezmoi.homeDir ".aliase"}}" ]; then
    source "{{joinPath .chezmoi.homeDir ".aliase"}}"
fi



# Setup adfs
if [ -f "$HOME/.adfs/plugins/java/set-java-home.zsh" ] ; then
# Setup JAVA_HOME
. "$HOME/.adfs/plugins/java/set-java-home.zsh"
fi

# export MANPATH="/usr/local/man:$MANPATH"


# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi


if [[ -c bat ]] ; then
  # set bat as manpage reader
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
#eval `{{- .home -}}/.dir_colors/dircolors`

# Kubertnetes alias and functions
{{ if lookPath "kubectl" }}
if [[ -c kubectl ]] ; then
   . <( kubectl completion zsh ) ;
fi
{{end}}


{{ if lookPath "starship" }}
    eval "$(starship init zsh)"
{{end}}


{{ if lookPath "kitty" }}
if [ command -v kitty &> /dev/null ; then
  kitty + complete setup zsh | source /dev/stdin

    # Workaround for ssh and kitten
    if [[ $TERM = "xterm-kitty" ]] ; then
        alias ssh="kitty +kitten ssh"
    fi
fi
{{end}}

{{ if lookPath "chectl" }}
if [[ -c chectl ]] ; then
   . <( chectl autocomplete:script zsh ) ;
fi
{{end}}

{{ if lookPath "rustup" }}
if [[ -c rustup ]] ; then
   . <( rustup completions zsh ) ;
fi
{{end}}

{{ if lookPath "flux" }}
if [[ -c flux ]] ; then
  . <(flux completion zsh)
fi
{{end}}

{{ if lookPath "terraform" }}
if [[ -c terraform ]] ; then
  autoload -U +X bashcompinit && bashcompinit
  complete -o nospace -C /usr/bin/terraform terraform
fi
{{end}}

{{ if lookPath "switcher" }}
if [[ -f /usr/local/bin/switch.sh ]] ; then
  source /usr/local/bin/switch.sh
fi
{{end}}

{{ if lookPath "kustomize" }}
if [[ -c kustomize ]] ; then
  . <(kustomize completion zsh)
fi
{{end}}

{{ if lookPath "istioctl" }}
if [[ -c istioctl ]] ; then
  . <(istioctl completion zsh)
fi
{{end}}

{{ if lookPath "pack" }}
if [[ -c pack ]] ; then
   . $( pack completion --shell zsh ) ;
fi
{{end}}

{{ if lookPath "restic" }}
if [[ -c restic ]] ; then
  source $(restic generate --zsh-completion /dev/stdout)
fi
{{end}}

{{ if lookPath "pfetch" }}
pfetch
{{end}}

{{ if lookPath "direnv" }}
if [[ -c direnv ]] ; then
  eval "$(direnv hook zsh)"
fi
{{end}}
